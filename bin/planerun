#!/bin/bash

# Usage message
function usage
{
	echo "Usage: $0 [effect_id] | effectname [params] | [--inorder] | [--random]"
	echo "With no argument, runs random effects forever"
	exit 0
}
if [ "$1" == "--help" ] || [ "$1" == "-?" ]; then usage; fi

# Default LDEV for plane
if [ -z "$LDEV" ]; then
	export LDEV="plane|[flip|strip:A,strip:B]"
fi

# Default directory
THISDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ $THISDIR == "/boot" ]; then
  DIR="/home/pi/lite/build/bin"
  IMGDIR="/home/pi/lite/img"
else
    if [ -e /boot/planerun ]; then
	echo "Sourcing /boot/planerun"
	source /boot/planerun
	exit 1
    fi
    DIR=`dirname $THISDIR`
    IMGDIR=$DIR/img
    DIR="$DIR/build/bin"
fi

echo "LDEV=$LDEV"
echo "DIR=$DIR"

# Shared functions

# This is a fixed point divide routine with one digit of precision.
# A simpler option is: echo "scale=2;$*" | bc -q 2>/dev/null
# but bc isn't installed everywhere like expr is
# Divide $1/$2 with two digits to the right of the decimal. Only works with positive numbers
function fpdiv
{
  WHOLE=$(expr $1 / $2)
  FRAC1=$(expr \( \( $1 \* 10 \) / $2 \) % 10)
  FRAC2=$(expr \( \( $1 \* 100 \) / $2 \) % 10)
  echo $WHOLE.$FRAC1$FRAC2
}

# This echos the command, then runs it
function run
{
	echo "+ $*"
	$*
}

# Saved effects
function patriot_bounce {
    if [ -z "$1" ]; then TIME=3.25; else TIME=$(fpdiv $1 3); fi
    $DIR/Ltool --time $TIME --rate 4 bounce red
    $DIR/Ltool --time $TIME --rate 4 bounce white
    $DIR/Ltool --time $TIME --rate 4 bounce blue
}

function rainbow1 {
	for i in {1..2}; do
		$DIR/Ltool --time 5 --rate  3 rotwash red red
		$DIR/Ltool --time 5 --rate -3 rotwash red red
	done
}

MIXED_COLORS=(red orange yellow green blue purple)

function mixed_flash {
	if [ -z "$1" ]; then COUNT=30; else COUNT=$(expr $1 \* 2); fi
	LASTC=99
	C=$LASTC
	for i in `seq 1 $COUNT`; do
      	  while [ $C == $LASTC ]; do
	    C=$(expr $RANDOM % ${#MIXED_COLORS[@]})
	  done
	  LASTC=$C
	  $DIR/Lflash --time .5 --rate 2 --density .04 ${MIXED_COLORS[$C]}
	done
}

#----------------------------------------------
# Effects function
#----------------------------------------------

# Only argument is the effect #

function run_effect {
  echo "Effect #$1"
  case $1 in
       0)
       run patriot_bounce 20
       
       ;;
       1)
       run $DIR/Ltool --time 2 --fade 1 plane
       run $DIR/Ltool --time 2 --fade 1 plane
       run $DIR/Ltool --time 2 --fade 1 plane
       ;;
       2)
       run $DIR/Lflash --time 10 --rate .5 --density .01 white
       ;;
       ;;
       3)
       run $DIR/Ltool --time 30 --filter sparkle all 'RGB(0.01,0,.01)'
       ;;
       4) 
       run rainbow1
       run rainbow1
       run rainbow1
       ;;
       5) 
       run mixed_flash 20
       ;;
       6)
       run $DIR/Ltool --time 40 --rate 2.1 bounce white 
       ;;
       7) 
       run $DIR/Lflash --time 30 --rate .15 --density .01 --filter sparkle magenta
       ;;
       8)
       run $DIR/Ltool --time 40 --filter 'sparkle(orange,.1)' all 'RGB(.1,.1,0)'
       ;;
       9)
       run $DIR/Lpov --time 40 --verbose --rate 2 $IMGDIR/smiley-44x44x24.rgb 44
       ;;
       10)
       run $DIR/Lpov --time 40 --verbose --rate 3 $IMGDIR/rainbowstar-44x44x24.rgb 44
       ;;
       *)
       echo "No such effect: #$EID"
       ;;
  esac
}

#----------------------------------------------
# Main loop
#----------------------------------------------

# Parse arguments
MODE=random

if [[ "$1" =~ ^[0-9]+$ ]]; then
   while true; do
     run_effect $1
   done
   exit 0
elif [ "$1" == "--inorder" ]; then
  MODE=inorder
elif [ "$1" == "--random" ]; then
  MODE=random  
elif [ "$1" != "" ]; then
   while true; do
     run $*
     exit 0
   done
fi

if [ "$MODE" == "inorder" ]; then echo "Running the effects in order"; 
elif [ "$MODE" == "random" ]; then echo "Randomly running the effects";
else echo "Unknown running mode: $MODE"
fi 

NUM_EFFECTS=11
# Always run the first effect first to make sure the lights work
EID=0
LAST_EID=0

while true; do
   run_effect $EID
   if [ "$MODE" == "inorder" ]; then 
     # In order
     EID=$(expr \( $EID + 1 \) % $NUM_EFFECTS )
   else
     # Random order
     while [ $LAST_EID == $EID ]; do
       EID=$(expr $RANDOM % $NUM_EFFECTS )
     done
     LAST_EID=$EID
   fi
done
